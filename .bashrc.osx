alias ls='ls -G'
alias ll='ls -lA'
alias l='ls'
export EDITOR=/usr/bin/vi

alias vlc="/Applications/VLC.app/Contents/MacOS/VLC"
alias matlab='/Applications/MATLAB_R2008a/bin/matlab -nodesktop -nosplash'
alias X11="open -a X11"
alias eject='diskutil umount'

alias sshece='ssh -Y jkuan@ssh.ece.ubc.ca'
alias sshecearchc24='ssh jkuan@ssh.ece.ubc.ca -t ssh arch -t ssh c24-0 -t tcsh'
alias sshecearchhead='ssh jkuan@ssh.ece.ubc.ca -t ssh arch -t ssh arch-head'
alias sshecearch='ssh jkuan@ssh.ece.ubc.ca -t ssh arch'
alias ssharch='ssh -Y ssh.ece.ubc.ca -tY ssh arch'

export P4CONFIG=~/.p4config

export DISPLAY=:0.0
export PATH="$PATH:/usr/X11R6/bin"

pdfman () {
   man -t $1 | open -a /Applications/Preview.app -f
}

export PATH=$PATH:/Users/jkuan/Scripts
export PATH="$PATH:/Users/jkuan/Scripts/usr/bin"
export MANPATH="$MANPATH:/Users/jkuan/Scripts/usr/share/man"

if [ CONQUE ]; then
	export TERM=xterm
fi

# cdff will change directory to that of front Finder window
function ff { osascript -e 'tell application "Finder"' \
-e "if (${1-1} <= (count Finder windows)) then" \
-e "get POSIX path of (target of window ${1-1} as alias)" \
-e 'else' -e 'get POSIX path of (desktop as alias)' \
-e 'end if' \
-e 'end tell'; }
function xcff { osascript -e 'tell application "Xcode"'
-e "if (${1-1} <= (count windows)) then" \
-e "get associated file name of window ${1-1}" \
-e 'else' \
-e 'get ""' \ 
-e 'end if' \
-e 'end tell'; }
function cdff { cd "`ff $@`"; pwd; }
function cdxc { FILE="`xcff $@`"; if [ "-$FILE" != "-" ] ; \
then cd "${FILE%/*}" ; fi; }

# source autojump and bash_completion
if \[ -f /opt/local/etc/profile.d/autojump.sh \]; then
    . /opt/local/etc/profile.d/autojump.sh
fi
if \[ -f /opt/local/etc/profile.d/bash_completion.sh \]; then
    . /opt/local/etc/profile.d/bash_completion.sh
fi
alias g='git'
complete -o nospace -F _git g
alias t='task'
if [ -f /opt/local/share/doc/task/scripts/bash/task_completion.sh ]; then
	source /opt/local/share/doc/task/scripts/bash/task_completion.sh
	complete -o nospace -F _task t
fi

# load local ruby version manager
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # This loads RVM into a shell session.
